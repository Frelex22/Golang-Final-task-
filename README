Для полного тестирования проекта, включая проверку работы оркестратора и агента, необходимо пройти несколько этапов. Мы будем использовать комбинацию команд PowerShell, чтобы убедиться, что серверы работают правильно и выполняют задачи по вычислению арифметических выражений.

Убедитесь, что оба сервера (оркестратор и агент) запущены и работают корректно.

Откройте файл main.go в директории orchestrator и нажмите Run.
Откройте файл main.go в директории agent и нажмите Run.
Тестирование API Оркестратора
1. Добавление вычисления арифметического выражения
В Terminal используйте Invoke-RestMethod для отправки POST-запроса:

##########EXAMPLE:

$body = @{
    expression = "2 + 2 * 2"     ----- выражение для рассчета-----
} | ConvertTo-Json

$response = Invoke-RestMethod -Uri 'http://localhost:8080/api/v1/calculate' `
    -Method POST `
    -ContentType 'application/json' `
    -Body $body

Write-Output $response

#########################

Ожидаемый результат: получение уникального идентификатора выражения.

2. Получение списка выражений
Отправьте GET-запрос для получения списка всех выражений:

########################################

$response = Invoke-RestMethod -Uri 'http://localhost:8080/api/v1/expressions'
Write-Output $response


############################
Ожидаемый результат: список выражений с их статусами и результатами.

3. Получение конкретного выражения по его идентификатору
Отправьте GET-запрос для получения конкретного выражения по его идентификатору:

################################################

$expressionId = "<вставьте_уникальный_идентификатор>" - ------ID выражения
$response = Invoke-RestMethod -Uri "http://localhost:8080/api/v1/expressions/$expressionId"
Write-Output $response

#####################################
Ожидаемый результат: информация о конкретном выражении, включая статус и результат.